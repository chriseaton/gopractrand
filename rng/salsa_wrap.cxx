/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: salsa.i

#define SWIGMODULE rng

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


    /* Includes the header in the wrapper code */
    #include <vector>
    #include <string>
    #include <math.h>
    #include <inttypes.h>
    #include "../practrand/include/PractRand/config-swig.h"
    #include "../practrand/include/PractRand_full.h"
    #include "../practrand/include/PractRand/rng_basics.h"
    #include "../practrand/include/PractRand/rng_adaptors.h"
    #include "../practrand/include/PractRand/rng_helpers.h"
    #include "../practrand/include/PractRand/RNGs/salsa.h"


#include <string>


    /* Includes the header in the wrapper code */
    #include <vector>
    #include <string>
    #include <math.h>
    #include <inttypes.h>
    #include "../practrand/include/PractRand/config-swig.h"
    #include "../practrand/include/PractRand_full.h"
    #include "../practrand/include/PractRand/rng_basics.h"
    #include "../practrand/include/PractRand/rng_helpers.h"

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_rng_fe65931e97657fa4(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_rng_fe65931e97657fa4(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_version_str_set_rng_fe65931e97657fa4(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  {
    if (arg1) {
      PractRand::version_str = (char const *) (new char[strlen((const char *)arg1)+1]);
      strcpy((char *)PractRand::version_str, (const char *)arg1);
    } else {
      PractRand::version_str = 0;
    }
  }
  
  free(arg1); 
}


_gostring_ _wrap_version_str_get_rng_fe65931e97657fa4() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)PractRand::version_str;
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


bool _wrap_initialize_PractRand_rng_fe65931e97657fa4() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)PractRand::initialize_PractRand();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_self_test_PractRand_rng_fe65931e97657fa4() {
  PractRand::self_test_PractRand();
  
}


void _wrap_issue_error__SWIG_0_rng_fe65931e97657fa4(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  PractRand::issue_error((char const *)arg1);
  
  free(arg1); 
}


void _wrap_issue_error__SWIG_1_rng_fe65931e97657fa4() {
  PractRand::issue_error();
  
}


void _wrap_hook_error_handler_rng_fe65931e97657fa4(void* _swig_go_0) {
  void (*arg1)(char const *) = (void (*)(char const *)) 0 ;
  
  arg1 = *(void (**)(char const *))&_swig_go_0; 
  
  PractRand::hook_error_handler(arg1);
  
}


PractRand::SEED_AUTO_TYPE *_wrap_new_SEED_AUTO_TYPE_rng_fe65931e97657fa4() {
  PractRand::SEED_AUTO_TYPE *result = 0 ;
  PractRand::SEED_AUTO_TYPE *_swig_go_result;
  
  
  result = (PractRand::SEED_AUTO_TYPE *)new PractRand::SEED_AUTO_TYPE();
  *(PractRand::SEED_AUTO_TYPE **)&_swig_go_result = (PractRand::SEED_AUTO_TYPE *)result; 
  return _swig_go_result;
}


void _wrap_delete_SEED_AUTO_TYPE_rng_fe65931e97657fa4(PractRand::SEED_AUTO_TYPE *_swig_go_0) {
  PractRand::SEED_AUTO_TYPE *arg1 = (PractRand::SEED_AUTO_TYPE *) 0 ;
  
  arg1 = *(PractRand::SEED_AUTO_TYPE **)&_swig_go_0; 
  
  delete arg1;
  
}


PractRand::SEED_NONE_TYPE *_wrap_new_SEED_NONE_TYPE_rng_fe65931e97657fa4() {
  PractRand::SEED_NONE_TYPE *result = 0 ;
  PractRand::SEED_NONE_TYPE *_swig_go_result;
  
  
  result = (PractRand::SEED_NONE_TYPE *)new PractRand::SEED_NONE_TYPE();
  *(PractRand::SEED_NONE_TYPE **)&_swig_go_result = (PractRand::SEED_NONE_TYPE *)result; 
  return _swig_go_result;
}


void _wrap_delete_SEED_NONE_TYPE_rng_fe65931e97657fa4(PractRand::SEED_NONE_TYPE *_swig_go_0) {
  PractRand::SEED_NONE_TYPE *arg1 = (PractRand::SEED_NONE_TYPE *) 0 ;
  
  arg1 = *(PractRand::SEED_NONE_TYPE **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SEED_AUTO_set_rng_fe65931e97657fa4(PractRand::SEED_AUTO_TYPE *_swig_go_0) {
  PractRand::SEED_AUTO_TYPE *arg1 = (PractRand::SEED_AUTO_TYPE *) 0 ;
  
  arg1 = *(PractRand::SEED_AUTO_TYPE **)&_swig_go_0; 
  
  PractRand::SEED_AUTO = *arg1;
  
}


PractRand::SEED_AUTO_TYPE *_wrap_SEED_AUTO_get_rng_fe65931e97657fa4() {
  PractRand::SEED_AUTO_TYPE *result = 0 ;
  PractRand::SEED_AUTO_TYPE *_swig_go_result;
  
  
  result = (PractRand::SEED_AUTO_TYPE *)&PractRand::SEED_AUTO;
  *(PractRand::SEED_AUTO_TYPE **)&_swig_go_result = (PractRand::SEED_AUTO_TYPE *)result; 
  return _swig_go_result;
}


void _wrap_SEED_NONE_set_rng_fe65931e97657fa4(PractRand::SEED_NONE_TYPE *_swig_go_0) {
  PractRand::SEED_NONE_TYPE *arg1 = (PractRand::SEED_NONE_TYPE *) 0 ;
  
  arg1 = *(PractRand::SEED_NONE_TYPE **)&_swig_go_0; 
  
  PractRand::SEED_NONE = *arg1;
  
}


PractRand::SEED_NONE_TYPE *_wrap_SEED_NONE_get_rng_fe65931e97657fa4() {
  PractRand::SEED_NONE_TYPE *result = 0 ;
  PractRand::SEED_NONE_TYPE *_swig_go_result;
  
  
  result = (PractRand::SEED_NONE_TYPE *)&PractRand::SEED_NONE;
  *(PractRand::SEED_NONE_TYPE **)&_swig_go_result = (PractRand::SEED_NONE_TYPE *)result; 
  return _swig_go_result;
}


void _wrap_delete_vRNG_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_vRNG_SeedFast_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  (arg1)->seed_fast(arg2);
  
}


void _wrap_vRNG_SeedFromRNG_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, PractRand::RNGs::vRNG *_swig_go_1) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::RNGs::vRNG *arg2 = (PractRand::RNGs::vRNG *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = *(PractRand::RNGs::vRNG **)&_swig_go_1; 
  
  (arg1)->seed(arg2);
  
}


void _wrap_vRNG_autoseed_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  (arg1)->autoseed();
  
}


long long _wrap_vRNG_serialize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (long)_swig_go_2; 
  
  result = (long)(arg1)->serialize(arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_vRNG_deserialize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (long)_swig_go_2; 
  
  result = (bool)(arg1)->deserialize((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_vRNG_PrintState_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  result = (arg1)->print_state();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_vRNG_WalkState_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, PractRand::StateWalkingObject *_swig_go_1) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::StateWalkingObject *arg2 = (PractRand::StateWalkingObject *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = *(PractRand::StateWalkingObject **)&_swig_go_1; 
  
  (arg1)->walk_state(arg2);
  
}


char _wrap_vRNG_raw8_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint8 result;
  char _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  result = (PractRand::Uint8)(arg1)->raw8();
  _swig_go_result = result; 
  return _swig_go_result;
}


short _wrap_vRNG_raw16_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint16 result;
  short _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  result = (PractRand::Uint16)(arg1)->raw16();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG_raw32_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  result = (PractRand::Uint32)(arg1)->raw32();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG_raw64_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  result = (PractRand::Uint64)(arg1)->raw64();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG_randi_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint32 arg2 ;
  PractRand::Uint32 arg3 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  arg3 = (PractRand::Uint32)_swig_go_2; 
  
  result = (PractRand::Uint32)(arg1)->randi(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG_RandiFast_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint32 arg2 ;
  PractRand::Uint32 arg3 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  arg3 = (PractRand::Uint32)_swig_go_2; 
  
  result = (PractRand::Uint32)(arg1)->randi_fast(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG_randli_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  result = (PractRand::Uint64)(arg1)->randli(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_vRNG_randf_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  float arg2 ;
  float arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (float)(arg1)->randf(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_vRNG_randlf_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  result = (double)(arg1)->randlf(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_vRNG_gaussian_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  result = (double)(arg1)->gaussian();
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_vRNG_GaussianFromMeanDev_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  result = (double)(arg1)->gaussian(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG_GetFlags_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  result = (PractRand::Uint64)((PractRand::RNGs::vRNG const *)arg1)->get_flags();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_vRNG_GetName_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  result = ((PractRand::RNGs::vRNG const *)arg1)->get_name();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


intgo _wrap_vRNG_GetNativeOutputSize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  result = (int)((PractRand::RNGs::vRNG const *)arg1)->get_native_output_size();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_vRNG_SeekForward128_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  (arg1)->seek_forward128(arg2,arg3);
  
}


void _wrap_vRNG_SeekBackward128_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  (arg1)->seek_backward128(arg2,arg3);
  
}


void _wrap_vRNG_SeekForward_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  (arg1)->seek_forward(arg2);
  
}


void _wrap_vRNG_SeekBackward_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  (arg1)->seek_backward(arg2);
  
}


void _wrap_vRNG_ResetEntropy_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  (arg1)->reset_entropy();
  
}


void _wrap_vRNG_AddEntropy8_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, char _swig_go_1) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint8 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (PractRand::Uint8)_swig_go_1; 
  
  (arg1)->add_entropy8(arg2);
  
}


void _wrap_vRNG_AddEntropy16_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, short _swig_go_1) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint16 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (PractRand::Uint16)_swig_go_1; 
  
  (arg1)->add_entropy16(arg2);
  
}


void _wrap_vRNG_AddEntropy32_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint32 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  
  (arg1)->add_entropy32(arg2);
  
}


void _wrap_vRNG_AddEntropy64_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  (arg1)->add_entropy64(arg2);
  
}


void _wrap_vRNG_AddEntropyN_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, void *_swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  (arg1)->add_entropy_N((void const *)arg2,arg3);
  
}


bool _wrap_vRNG_AddEntropyAuto_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)(arg1)->add_entropy_automatically(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_vRNG_FlushBuffers_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  (arg1)->flush_buffers();
  
}


intgo _wrap_OUTPUT_BITS_vRNG8_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::vRNG8::OUTPUT_BITS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


short _wrap_vRNG8_raw16_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint16 result;
  short _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  result = (PractRand::Uint16)(arg1)->raw16();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG8_raw32_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  result = (PractRand::Uint32)(arg1)->raw32();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG8_raw64_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  result = (PractRand::Uint64)(arg1)->raw64();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG8_GetNativeOutputSize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  result = (int)((PractRand::RNGs::vRNG8 const *)arg1)->get_native_output_size();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_vRNG8_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_vRNG8_SeedFast_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seed_fast(arg2);
  
}


void _wrap_vRNG8_SeedFromRNG_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, PractRand::RNGs::vRNG *_swig_go_1) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::RNGs::vRNG *arg2 = (PractRand::RNGs::vRNG *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = *(PractRand::RNGs::vRNG **)&_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seed(arg2);
  
}


void _wrap_vRNG8_autoseed_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->autoseed();
  
}


long long _wrap_vRNG8_serialize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (long)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (long)(swig_b0)->serialize(arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_vRNG8_deserialize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (long)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (bool)(swig_b0)->deserialize((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_vRNG8_PrintState_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (swig_b0)->print_state();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_vRNG8_WalkState_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, PractRand::StateWalkingObject *_swig_go_1) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::StateWalkingObject *arg2 = (PractRand::StateWalkingObject *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = *(PractRand::StateWalkingObject **)&_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->walk_state(arg2);
  
}


char _wrap_vRNG8_raw8_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint8 result;
  char _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint8)(swig_b0)->raw8();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG8_randi_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint32 arg2 ;
  PractRand::Uint32 arg3 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  arg3 = (PractRand::Uint32)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint32)(swig_b0)->randi(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG8_RandiFast_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint32 arg2 ;
  PractRand::Uint32 arg3 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  arg3 = (PractRand::Uint32)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint32)(swig_b0)->randi_fast(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG8_randli_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint64)(swig_b0)->randli(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_vRNG8_randf_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  float arg2 ;
  float arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (float)(swig_b0)->randf(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_vRNG8_randlf_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (double)(swig_b0)->randlf(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_vRNG8_gaussian_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (double)(swig_b0)->gaussian();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG8_GetFlags_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint64)((PractRand::RNGs::vRNG const *)swig_b0)->get_flags();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_vRNG8_GetName_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = ((PractRand::RNGs::vRNG const *)swig_b0)->get_name();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_vRNG8_SeekForward128_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_forward128(arg2,arg3);
  
}


void _wrap_vRNG8_SeekBackward128_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_backward128(arg2,arg3);
  
}


void _wrap_vRNG8_SeekForward_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_forward(arg2);
  
}


void _wrap_vRNG8_SeekBackward_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_backward(arg2);
  
}


void _wrap_vRNG8_ResetEntropy_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->reset_entropy();
  
}


void _wrap_vRNG8_AddEntropy8_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, char _swig_go_1) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint8 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (PractRand::Uint8)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy8(arg2);
  
}


void _wrap_vRNG8_AddEntropy16_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, short _swig_go_1) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint16 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (PractRand::Uint16)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy16(arg2);
  
}


void _wrap_vRNG8_AddEntropy32_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint32 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy32(arg2);
  
}


void _wrap_vRNG8_AddEntropy64_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy64(arg2);
  
}


void _wrap_vRNG8_AddEntropyN_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, void *_swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy_N((void const *)arg2,arg3);
  
}


bool _wrap_vRNG8_AddEntropyAuto_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (bool)(swig_b0)->add_entropy_automatically(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_vRNG8_FlushBuffers_rng_fe65931e97657fa4(PractRand::RNGs::vRNG8 *_swig_go_0) {
  PractRand::RNGs::vRNG8 *arg1 = (PractRand::RNGs::vRNG8 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG8 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->flush_buffers();
  
}


intgo _wrap_OUTPUT_BITS_vRNG16_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::vRNG16::OUTPUT_BITS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


char _wrap_vRNG16_raw8_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint8 result;
  char _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  result = (PractRand::Uint8)(arg1)->raw8();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG16_raw32_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  result = (PractRand::Uint32)(arg1)->raw32();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG16_raw64_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  result = (PractRand::Uint64)(arg1)->raw64();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG16_GetNativeOutputSize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  result = (int)((PractRand::RNGs::vRNG16 const *)arg1)->get_native_output_size();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_vRNG16_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_vRNG16_SeedFast_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seed_fast(arg2);
  
}


void _wrap_vRNG16_SeedFromRNG_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, PractRand::RNGs::vRNG *_swig_go_1) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::RNGs::vRNG *arg2 = (PractRand::RNGs::vRNG *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = *(PractRand::RNGs::vRNG **)&_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seed(arg2);
  
}


void _wrap_vRNG16_autoseed_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->autoseed();
  
}


long long _wrap_vRNG16_serialize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (long)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (long)(swig_b0)->serialize(arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_vRNG16_deserialize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (long)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (bool)(swig_b0)->deserialize((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_vRNG16_PrintState_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (swig_b0)->print_state();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_vRNG16_WalkState_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, PractRand::StateWalkingObject *_swig_go_1) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::StateWalkingObject *arg2 = (PractRand::StateWalkingObject *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = *(PractRand::StateWalkingObject **)&_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->walk_state(arg2);
  
}


short _wrap_vRNG16_raw16_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint16 result;
  short _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint16)(swig_b0)->raw16();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG16_randi_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint32 arg2 ;
  PractRand::Uint32 arg3 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  arg3 = (PractRand::Uint32)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint32)(swig_b0)->randi(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG16_RandiFast_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint32 arg2 ;
  PractRand::Uint32 arg3 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  arg3 = (PractRand::Uint32)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint32)(swig_b0)->randi_fast(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG16_randli_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint64)(swig_b0)->randli(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_vRNG16_randf_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  float arg2 ;
  float arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (float)(swig_b0)->randf(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_vRNG16_randlf_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (double)(swig_b0)->randlf(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_vRNG16_gaussian_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (double)(swig_b0)->gaussian();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG16_GetFlags_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint64)((PractRand::RNGs::vRNG const *)swig_b0)->get_flags();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_vRNG16_GetName_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = ((PractRand::RNGs::vRNG const *)swig_b0)->get_name();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_vRNG16_SeekForward128_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_forward128(arg2,arg3);
  
}


void _wrap_vRNG16_SeekBackward128_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_backward128(arg2,arg3);
  
}


void _wrap_vRNG16_SeekForward_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_forward(arg2);
  
}


void _wrap_vRNG16_SeekBackward_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_backward(arg2);
  
}


void _wrap_vRNG16_ResetEntropy_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->reset_entropy();
  
}


void _wrap_vRNG16_AddEntropy8_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, char _swig_go_1) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint8 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (PractRand::Uint8)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy8(arg2);
  
}


void _wrap_vRNG16_AddEntropy16_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, short _swig_go_1) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint16 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (PractRand::Uint16)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy16(arg2);
  
}


void _wrap_vRNG16_AddEntropy32_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint32 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy32(arg2);
  
}


void _wrap_vRNG16_AddEntropy64_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy64(arg2);
  
}


void _wrap_vRNG16_AddEntropyN_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, void *_swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy_N((void const *)arg2,arg3);
  
}


bool _wrap_vRNG16_AddEntropyAuto_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (bool)(swig_b0)->add_entropy_automatically(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_vRNG16_FlushBuffers_rng_fe65931e97657fa4(PractRand::RNGs::vRNG16 *_swig_go_0) {
  PractRand::RNGs::vRNG16 *arg1 = (PractRand::RNGs::vRNG16 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG16 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->flush_buffers();
  
}


intgo _wrap_OUTPUT_BITS_vRNG32_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::vRNG32::OUTPUT_BITS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


char _wrap_vRNG32_raw8_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint8 result;
  char _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  result = (PractRand::Uint8)(arg1)->raw8();
  _swig_go_result = result; 
  return _swig_go_result;
}


short _wrap_vRNG32_raw16_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint16 result;
  short _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  result = (PractRand::Uint16)(arg1)->raw16();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG32_raw64_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  result = (PractRand::Uint64)(arg1)->raw64();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG32_GetNativeOutputSize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  result = (int)((PractRand::RNGs::vRNG32 const *)arg1)->get_native_output_size();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_vRNG32_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_vRNG32_SeedFast_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seed_fast(arg2);
  
}


void _wrap_vRNG32_SeedFromRNG_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, PractRand::RNGs::vRNG *_swig_go_1) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::RNGs::vRNG *arg2 = (PractRand::RNGs::vRNG *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = *(PractRand::RNGs::vRNG **)&_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seed(arg2);
  
}


void _wrap_vRNG32_autoseed_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->autoseed();
  
}


long long _wrap_vRNG32_serialize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (long)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (long)(swig_b0)->serialize(arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_vRNG32_deserialize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (long)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (bool)(swig_b0)->deserialize((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_vRNG32_PrintState_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (swig_b0)->print_state();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_vRNG32_WalkState_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, PractRand::StateWalkingObject *_swig_go_1) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::StateWalkingObject *arg2 = (PractRand::StateWalkingObject *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = *(PractRand::StateWalkingObject **)&_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->walk_state(arg2);
  
}


intgo _wrap_vRNG32_raw32_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint32)(swig_b0)->raw32();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG32_randi_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint32 arg2 ;
  PractRand::Uint32 arg3 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  arg3 = (PractRand::Uint32)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint32)(swig_b0)->randi(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG32_RandiFast_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint32 arg2 ;
  PractRand::Uint32 arg3 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  arg3 = (PractRand::Uint32)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint32)(swig_b0)->randi_fast(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG32_randli_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint64)(swig_b0)->randli(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_vRNG32_randf_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  float arg2 ;
  float arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (float)(swig_b0)->randf(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_vRNG32_randlf_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (double)(swig_b0)->randlf(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_vRNG32_gaussian_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (double)(swig_b0)->gaussian();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG32_GetFlags_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint64)((PractRand::RNGs::vRNG const *)swig_b0)->get_flags();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_vRNG32_GetName_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = ((PractRand::RNGs::vRNG const *)swig_b0)->get_name();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_vRNG32_SeekForward128_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_forward128(arg2,arg3);
  
}


void _wrap_vRNG32_SeekBackward128_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_backward128(arg2,arg3);
  
}


void _wrap_vRNG32_SeekForward_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_forward(arg2);
  
}


void _wrap_vRNG32_SeekBackward_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_backward(arg2);
  
}


void _wrap_vRNG32_ResetEntropy_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->reset_entropy();
  
}


void _wrap_vRNG32_AddEntropy8_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, char _swig_go_1) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint8 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (PractRand::Uint8)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy8(arg2);
  
}


void _wrap_vRNG32_AddEntropy16_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, short _swig_go_1) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint16 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (PractRand::Uint16)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy16(arg2);
  
}


void _wrap_vRNG32_AddEntropy32_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint32 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy32(arg2);
  
}


void _wrap_vRNG32_AddEntropy64_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy64(arg2);
  
}


void _wrap_vRNG32_AddEntropyN_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, void *_swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy_N((void const *)arg2,arg3);
  
}


bool _wrap_vRNG32_AddEntropyAuto_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (bool)(swig_b0)->add_entropy_automatically(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_vRNG32_FlushBuffers_rng_fe65931e97657fa4(PractRand::RNGs::vRNG32 *_swig_go_0) {
  PractRand::RNGs::vRNG32 *arg1 = (PractRand::RNGs::vRNG32 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG32 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->flush_buffers();
  
}


intgo _wrap_OUTPUT_BITS_vRNG64_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::vRNG64::OUTPUT_BITS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


char _wrap_vRNG64_raw8_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint8 result;
  char _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  result = (PractRand::Uint8)(arg1)->raw8();
  _swig_go_result = result; 
  return _swig_go_result;
}


short _wrap_vRNG64_raw16_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint16 result;
  short _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  result = (PractRand::Uint16)(arg1)->raw16();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG64_raw32_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  result = (PractRand::Uint32)(arg1)->raw32();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG64_GetNativeOutputSize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  result = (int)((PractRand::RNGs::vRNG64 const *)arg1)->get_native_output_size();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_vRNG64_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_vRNG64_SeedFast_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seed_fast(arg2);
  
}


void _wrap_vRNG64_SeedFromRNG_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, PractRand::RNGs::vRNG *_swig_go_1) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::RNGs::vRNG *arg2 = (PractRand::RNGs::vRNG *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = *(PractRand::RNGs::vRNG **)&_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seed(arg2);
  
}


void _wrap_vRNG64_autoseed_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->autoseed();
  
}


long long _wrap_vRNG64_serialize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (long)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (long)(swig_b0)->serialize(arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_vRNG64_deserialize_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (long)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (bool)(swig_b0)->deserialize((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_vRNG64_PrintState_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (swig_b0)->print_state();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_vRNG64_WalkState_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, PractRand::StateWalkingObject *_swig_go_1) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::StateWalkingObject *arg2 = (PractRand::StateWalkingObject *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = *(PractRand::StateWalkingObject **)&_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->walk_state(arg2);
  
}


long long _wrap_vRNG64_raw64_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint64)(swig_b0)->raw64();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG64_randi_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint32 arg2 ;
  PractRand::Uint32 arg3 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  arg3 = (PractRand::Uint32)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint32)(swig_b0)->randi(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_vRNG64_RandiFast_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint32 arg2 ;
  PractRand::Uint32 arg3 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  arg3 = (PractRand::Uint32)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint32)(swig_b0)->randi_fast(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG64_randli_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint64)(swig_b0)->randli(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_vRNG64_randf_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  float arg2 ;
  float arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (float)(swig_b0)->randf(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_vRNG64_randlf_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (double)(swig_b0)->randlf(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_vRNG64_gaussian_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (double)(swig_b0)->gaussian();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_vRNG64_GetFlags_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (PractRand::Uint64)((PractRand::RNGs::vRNG const *)swig_b0)->get_flags();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_vRNG64_GetName_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = ((PractRand::RNGs::vRNG const *)swig_b0)->get_name();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_vRNG64_SeekForward128_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_forward128(arg2,arg3);
  
}


void _wrap_vRNG64_SeekBackward128_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_backward128(arg2,arg3);
  
}


void _wrap_vRNG64_SeekForward_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_forward(arg2);
  
}


void _wrap_vRNG64_SeekBackward_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->seek_backward(arg2);
  
}


void _wrap_vRNG64_ResetEntropy_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->reset_entropy();
  
}


void _wrap_vRNG64_AddEntropy8_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, char _swig_go_1) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint8 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (PractRand::Uint8)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy8(arg2);
  
}


void _wrap_vRNG64_AddEntropy16_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, short _swig_go_1) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint16 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (PractRand::Uint16)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy16(arg2);
  
}


void _wrap_vRNG64_AddEntropy32_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint32 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy32(arg2);
  
}


void _wrap_vRNG64_AddEntropy64_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy64(arg2);
  
}


void _wrap_vRNG64_AddEntropyN_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, void *_swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->add_entropy_N((void const *)arg2,arg3);
  
}


bool _wrap_vRNG64_AddEntropyAuto_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  result = (bool)(swig_b0)->add_entropy_automatically(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_vRNG64_FlushBuffers_rng_fe65931e97657fa4(PractRand::RNGs::vRNG64 *_swig_go_0) {
  PractRand::RNGs::vRNG64 *arg1 = (PractRand::RNGs::vRNG64 *) 0 ;
  
  arg1 = *(PractRand::RNGs::vRNG64 **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG *swig_b0 = (PractRand::RNGs::vRNG *)arg1;
  (swig_b0)->flush_buffers();
  
}


intgo _wrap_NORMAL_1_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::OUTPUT_TYPES::NORMAL_1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NORMAL_ALL_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::OUTPUT_TYPES::NORMAL_ALL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SUPPORTS_FASTFORWARD_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::SUPPORTS_FASTFORWARD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SUPPORTS_ENTROPY_ACCUMULATION_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::SUPPORTS_ENTROPY_ACCUMULATION;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CRYPTOGRAPHIC_SECURITY_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::CRYPTOGRAPHIC_SECURITY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_USES_SPECIFIED_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::USES_SPECIFIED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_USES_MULTIPLICATION_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::USES_MULTIPLICATION;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_USES_COMPLEX_INSTRUCTIONS_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::USES_COMPLEX_INSTRUCTIONS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_USES_VARIABLE_SHIFTS_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::USES_VARIABLE_SHIFTS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_USES_INDIRECTION_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::USES_INDIRECTION;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_USES_CYCLIC_BUFFER_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::USES_CYCLIC_BUFFER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_USES_FLOW_CONTROL_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::USES_FLOW_CONTROL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_USES_BIT_SCANS_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::USES_BIT_SCANS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_USES_OTHER_WORD_SIZES_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::USES_OTHER_WORD_SIZES;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ENDIAN_SAFE_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::ENDIAN_SAFE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_OUTPUT_IS_BUFFERED_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::OUTPUT_IS_BUFFERED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_OUTPUT_IS_HASHED_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::OUTPUT_IS_HASHED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_STATE_UNAVAILABLE_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::STATE_UNAVAILABLE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SEEDING_UNSUPPORTED_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::SEEDING_UNSUPPORTED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NEEDS_GENERIC_SEEDING_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::FLAG::NEEDS_GENERIC_SEEDING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_delete_StateWalkingObject_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_StateWalkingObject_handle__SWIG_0_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, bool *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  bool *arg2 = 0 ;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(bool **)&_swig_go_1; 
  
  (arg1)->handle(*arg2);
  
}


void _wrap_StateWalkingObject_handle__SWIG_1_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Uint8 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Uint8 *arg2 = 0 ;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Uint8 **)&_swig_go_1; 
  
  (arg1)->handle(*arg2);
  
}


void _wrap_StateWalkingObject_handle__SWIG_2_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Uint16 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Uint16 *arg2 = 0 ;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Uint16 **)&_swig_go_1; 
  
  (arg1)->handle(*arg2);
  
}


void _wrap_StateWalkingObject_handle__SWIG_3_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Uint32 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Uint32 *arg2 = 0 ;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Uint32 **)&_swig_go_1; 
  
  (arg1)->handle(*arg2);
  
}


void _wrap_StateWalkingObject_handle__SWIG_4_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Uint64 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Uint64 *arg2 = 0 ;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Uint64 **)&_swig_go_1; 
  
  (arg1)->handle(*arg2);
  
}


void _wrap_StateWalkingObject_handle__SWIG_5_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, float *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  float *arg2 = 0 ;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  (arg1)->handle(*arg2);
  
}


void _wrap_StateWalkingObject_handle__SWIG_6_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, double *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  double *arg2 = 0 ;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  (arg1)->handle(*arg2);
  
}


intgo _wrap_FLAG_READ_ONLY_StateWalkingObject_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::StateWalkingObject::FLAG_READ_ONLY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FLAG_WRITE_ONLY_StateWalkingObject_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::StateWalkingObject::FLAG_WRITE_ONLY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FLAG_CLUMSY_StateWalkingObject_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::StateWalkingObject::FLAG_CLUMSY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FLAG_SEEDER_StateWalkingObject_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::StateWalkingObject::FLAG_SEEDER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_StateWalkingObject_GetProperties_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  
  result = (PractRand::Uint32)((PractRand::StateWalkingObject const *)arg1)->get_properties();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_StateWalkingObject_IsReadOnly_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  
  result = (bool)((PractRand::StateWalkingObject const *)arg1)->is_read_only();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_StateWalkingObject_IsWriteOnly_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  
  result = (bool)((PractRand::StateWalkingObject const *)arg1)->is_write_only();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_StateWalkingObject_IsClumsy_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  
  result = (bool)((PractRand::StateWalkingObject const *)arg1)->is_clumsy();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_StateWalkingObject_IsSeeder_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  
  result = (bool)((PractRand::StateWalkingObject const *)arg1)->is_seeder();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_StateWalkingObject_HandleInt8_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Sint8 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Sint8 *arg2 = 0 ;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Sint8 **)&_swig_go_1; 
  
  (arg1)->handle(*arg2);
  
}


void _wrap_StateWalkingObject_HandleInt16_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Sint16 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Sint16 *arg2 = 0 ;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Sint16 **)&_swig_go_1; 
  
  (arg1)->handle(*arg2);
  
}


void _wrap_StateWalkingObject_HandleInt32_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Sint32 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Sint32 *arg2 = 0 ;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Sint32 **)&_swig_go_1; 
  
  (arg1)->handle(*arg2);
  
}


void _wrap_StateWalkingObject_HandleInt64_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Sint64 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Sint64 *arg2 = 0 ;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Sint64 **)&_swig_go_1; 
  
  (arg1)->handle(*arg2);
  
}


PractRand::StateWalkingObject *_wrap_StateWalkingObject_LeftShiftUInt8_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Uint8 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Uint8 *arg2 = 0 ;
  PractRand::StateWalkingObject *result = 0 ;
  PractRand::StateWalkingObject *_swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Uint8 **)&_swig_go_1; 
  
  result = (PractRand::StateWalkingObject *) &(arg1)->operator <<(*arg2);
  *(PractRand::StateWalkingObject **)&_swig_go_result = result; 
  return _swig_go_result;
}


PractRand::StateWalkingObject *_wrap_StateWalkingObject_LeftShiftUInt16_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Uint16 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Uint16 *arg2 = 0 ;
  PractRand::StateWalkingObject *result = 0 ;
  PractRand::StateWalkingObject *_swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Uint16 **)&_swig_go_1; 
  
  result = (PractRand::StateWalkingObject *) &(arg1)->operator <<(*arg2);
  *(PractRand::StateWalkingObject **)&_swig_go_result = result; 
  return _swig_go_result;
}


PractRand::StateWalkingObject *_wrap_StateWalkingObject_LeftShiftUInt32_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Uint32 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Uint32 *arg2 = 0 ;
  PractRand::StateWalkingObject *result = 0 ;
  PractRand::StateWalkingObject *_swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Uint32 **)&_swig_go_1; 
  
  result = (PractRand::StateWalkingObject *) &(arg1)->operator <<(*arg2);
  *(PractRand::StateWalkingObject **)&_swig_go_result = result; 
  return _swig_go_result;
}


PractRand::StateWalkingObject *_wrap_StateWalkingObject_LeftShiftUInt64_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Uint64 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Uint64 *arg2 = 0 ;
  PractRand::StateWalkingObject *result = 0 ;
  PractRand::StateWalkingObject *_swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Uint64 **)&_swig_go_1; 
  
  result = (PractRand::StateWalkingObject *) &(arg1)->operator <<(*arg2);
  *(PractRand::StateWalkingObject **)&_swig_go_result = result; 
  return _swig_go_result;
}


PractRand::StateWalkingObject *_wrap_StateWalkingObject_LeftShiftInt8_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Sint8 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Sint8 *arg2 = 0 ;
  PractRand::StateWalkingObject *result = 0 ;
  PractRand::StateWalkingObject *_swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Sint8 **)&_swig_go_1; 
  
  result = (PractRand::StateWalkingObject *) &(arg1)->operator <<(*arg2);
  *(PractRand::StateWalkingObject **)&_swig_go_result = result; 
  return _swig_go_result;
}


PractRand::StateWalkingObject *_wrap_StateWalkingObject_LeftShiftInt16_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Sint16 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Sint16 *arg2 = 0 ;
  PractRand::StateWalkingObject *result = 0 ;
  PractRand::StateWalkingObject *_swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Sint16 **)&_swig_go_1; 
  
  result = (PractRand::StateWalkingObject *) &(arg1)->operator <<(*arg2);
  *(PractRand::StateWalkingObject **)&_swig_go_result = result; 
  return _swig_go_result;
}


PractRand::StateWalkingObject *_wrap_StateWalkingObject_LeftShiftInt32_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Sint32 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Sint32 *arg2 = 0 ;
  PractRand::StateWalkingObject *result = 0 ;
  PractRand::StateWalkingObject *_swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Sint32 **)&_swig_go_1; 
  
  result = (PractRand::StateWalkingObject *) &(arg1)->operator <<(*arg2);
  *(PractRand::StateWalkingObject **)&_swig_go_result = result; 
  return _swig_go_result;
}


PractRand::StateWalkingObject *_wrap_StateWalkingObject_LeftShiftInt64_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, PractRand::Sint64 *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  PractRand::Sint64 *arg2 = 0 ;
  PractRand::StateWalkingObject *result = 0 ;
  PractRand::StateWalkingObject *_swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(PractRand::Sint64 **)&_swig_go_1; 
  
  result = (PractRand::StateWalkingObject *) &(arg1)->operator <<(*arg2);
  *(PractRand::StateWalkingObject **)&_swig_go_result = result; 
  return _swig_go_result;
}


PractRand::StateWalkingObject *_wrap_StateWalkingObject_LeftShiftFloat32_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, float *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  float *arg2 = 0 ;
  PractRand::StateWalkingObject *result = 0 ;
  PractRand::StateWalkingObject *_swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  result = (PractRand::StateWalkingObject *) &(arg1)->operator <<(*arg2);
  *(PractRand::StateWalkingObject **)&_swig_go_result = result; 
  return _swig_go_result;
}


PractRand::StateWalkingObject *_wrap_StateWalkingObject_LeftShiftFloat64_rng_fe65931e97657fa4(PractRand::StateWalkingObject *_swig_go_0, double *_swig_go_1) {
  PractRand::StateWalkingObject *arg1 = (PractRand::StateWalkingObject *) 0 ;
  double *arg2 = 0 ;
  PractRand::StateWalkingObject *result = 0 ;
  PractRand::StateWalkingObject *_swig_go_result;
  
  arg1 = *(PractRand::StateWalkingObject **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  result = (PractRand::StateWalkingObject *) &(arg1)->operator <<(*arg2);
  *(PractRand::StateWalkingObject **)&_swig_go_result = result; 
  return _swig_go_result;
}


PractRand::StateWalkingObject *_wrap_vrng_to_rng_seeder_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::vRNG *arg1 = (PractRand::RNGs::vRNG *) 0 ;
  PractRand::StateWalkingObject *result = 0 ;
  PractRand::StateWalkingObject *_swig_go_result;
  
  arg1 = *(PractRand::RNGs::vRNG **)&_swig_go_0; 
  
  result = (PractRand::StateWalkingObject *)PractRand::vrng_to_rng_seeder(arg1);
  *(PractRand::StateWalkingObject **)&_swig_go_result = (PractRand::StateWalkingObject *)result; 
  return _swig_go_result;
}


PractRand::StateWalkingObject *_wrap_get_autoseeder_rng_fe65931e97657fa4(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  PractRand::StateWalkingObject *result = 0 ;
  PractRand::StateWalkingObject *_swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  result = (PractRand::StateWalkingObject *)PractRand::get_autoseeder((void const *)arg1);
  *(PractRand::StateWalkingObject **)&_swig_go_result = (PractRand::StateWalkingObject *)result; 
  return _swig_go_result;
}


intgo _wrap_OUTPUT_TYPE_salsa_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::Raw::salsa::OUTPUT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_OUTPUT_BITS_salsa_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::Raw::salsa::OUTPUT_BITS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FLAGS_salsa_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::Raw::salsa::FLAGS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


PractRand::RNGs::Raw::salsa *_wrap_new_salsa_rng_fe65931e97657fa4() {
  PractRand::RNGs::Raw::salsa *result = 0 ;
  PractRand::RNGs::Raw::salsa *_swig_go_result;
  
  
  result = (PractRand::RNGs::Raw::salsa *)new PractRand::RNGs::Raw::salsa();
  *(PractRand::RNGs::Raw::salsa **)&_swig_go_result = (PractRand::RNGs::Raw::salsa *)result; 
  return _swig_go_result;
}


void _wrap_delete_salsa_rng_fe65931e97657fa4(PractRand::RNGs::Raw::salsa *_swig_go_0) {
  PractRand::RNGs::Raw::salsa *arg1 = (PractRand::RNGs::Raw::salsa *) 0 ;
  
  arg1 = *(PractRand::RNGs::Raw::salsa **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_salsa_raw32_rng_fe65931e97657fa4(PractRand::RNGs::Raw::salsa *_swig_go_0) {
  PractRand::RNGs::Raw::salsa *arg1 = (PractRand::RNGs::Raw::salsa *) 0 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Raw::salsa **)&_swig_go_0; 
  
  result = (PractRand::Uint32)(arg1)->raw32();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_salsa_seed_rng_fe65931e97657fa4(PractRand::RNGs::Raw::salsa *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::Raw::salsa *arg1 = (PractRand::RNGs::Raw::salsa *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::Raw::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  (arg1)->seed(arg2);
  
}


void _wrap_salsa_SeedAndIV_rng_fe65931e97657fa4(PractRand::RNGs::Raw::salsa *_swig_go_0, intgo *_swig_go_1, bool _swig_go_2) {
  PractRand::RNGs::Raw::salsa *arg1 = (PractRand::RNGs::Raw::salsa *) 0 ;
  PractRand::Uint32 *arg2 ;
  bool arg3 ;
  
  arg1 = *(PractRand::RNGs::Raw::salsa **)&_swig_go_0; 
  arg2 = *(PractRand::Uint32 **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->seed((PractRand::Uint32 const (*))arg2,arg3);
  
}


void _wrap_salsa_SeedShort_rng_fe65931e97657fa4(PractRand::RNGs::Raw::salsa *_swig_go_0, intgo *_swig_go_1, bool _swig_go_2) {
  PractRand::RNGs::Raw::salsa *arg1 = (PractRand::RNGs::Raw::salsa *) 0 ;
  PractRand::Uint32 *arg2 ;
  bool arg3 ;
  
  arg1 = *(PractRand::RNGs::Raw::salsa **)&_swig_go_0; 
  arg2 = *(PractRand::Uint32 **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->seed_short((PractRand::Uint32 const (*))arg2,arg3);
  
}


void _wrap_salsa_seed_short_rng_fe65931e97657fa4(PractRand::RNGs::Raw::salsa *_swig_go_0, intgo *_swig_go_1) {
  PractRand::RNGs::Raw::salsa *arg1 = (PractRand::RNGs::Raw::salsa *) 0 ;
  PractRand::Uint32 *arg2 ;
  
  arg1 = *(PractRand::RNGs::Raw::salsa **)&_swig_go_0; 
  arg2 = *(PractRand::Uint32 **)&_swig_go_1; 
  
  (arg1)->seed_short((PractRand::Uint32 const (*))arg2);
  
}


void _wrap_salsa_WalkState_rng_fe65931e97657fa4(PractRand::RNGs::Raw::salsa *_swig_go_0, PractRand::StateWalkingObject *_swig_go_1) {
  PractRand::RNGs::Raw::salsa *arg1 = (PractRand::RNGs::Raw::salsa *) 0 ;
  PractRand::StateWalkingObject *arg2 = (PractRand::StateWalkingObject *) 0 ;
  
  arg1 = *(PractRand::RNGs::Raw::salsa **)&_swig_go_0; 
  arg2 = *(PractRand::StateWalkingObject **)&_swig_go_1; 
  
  (arg1)->walk_state(arg2);
  
}


void _wrap_salsa_SeekForward_rng_fe65931e97657fa4(PractRand::RNGs::Raw::salsa *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::Raw::salsa *arg1 = (PractRand::RNGs::Raw::salsa *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::Raw::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  (arg1)->seek_forward(arg2,arg3);
  
}


void _wrap_salsa_SeekBackward_rng_fe65931e97657fa4(PractRand::RNGs::Raw::salsa *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::Raw::salsa *arg1 = (PractRand::RNGs::Raw::salsa *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::Raw::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  (arg1)->seek_backward(arg2,arg3);
  
}


void _wrap_salsa_SetRounds_rng_fe65931e97657fa4(PractRand::RNGs::Raw::salsa *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::Raw::salsa *arg1 = (PractRand::RNGs::Raw::salsa *) 0 ;
  int arg2 ;
  
  arg1 = *(PractRand::RNGs::Raw::salsa **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->set_rounds(arg2);
  
}


intgo _wrap_salsa_GetRounds_rng_fe65931e97657fa4(PractRand::RNGs::Raw::salsa *_swig_go_0) {
  PractRand::RNGs::Raw::salsa *arg1 = (PractRand::RNGs::Raw::salsa *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Raw::salsa **)&_swig_go_0; 
  
  result = (int)((PractRand::RNGs::Raw::salsa const *)arg1)->get_rounds();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_salsa_self_test_rng_fe65931e97657fa4() {
  PractRand::RNGs::Raw::salsa::self_test();
  
}


intgo _wrap_OUTPUT_TYPE_SalsaPolymorphic_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::Polymorphic::salsa::OUTPUT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_OUTPUT_BITS_SalsaPolymorphic_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::Polymorphic::salsa::OUTPUT_BITS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FLAGS_SalsaPolymorphic_rng_fe65931e97657fa4() {
  int result;
  intgo _swig_go_result;
  
  
  result = PractRand::RNGs::Polymorphic::salsa::FLAGS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SalsaPolymorphic_implementation_set_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, PractRand::RNGs::Raw::salsa *_swig_go_1) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::RNGs::Raw::salsa *arg2 = (PractRand::RNGs::Raw::salsa *) 0 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = *(PractRand::RNGs::Raw::salsa **)&_swig_go_1; 
  
  if (arg1) (arg1)->implementation = *arg2;
  
}


PractRand::RNGs::Raw::salsa *_wrap_SalsaPolymorphic_implementation_get_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::RNGs::Raw::salsa *result = 0 ;
  PractRand::RNGs::Raw::salsa *_swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  result = (PractRand::RNGs::Raw::salsa *)& ((arg1)->implementation);
  *(PractRand::RNGs::Raw::salsa **)&_swig_go_result = (PractRand::RNGs::Raw::salsa *)result; 
  return _swig_go_result;
}


PractRand::RNGs::Polymorphic::salsa *_wrap_new_SalsaPolymorphicFromUInt64_rng_fe65931e97657fa4(long long _swig_go_0) {
  PractRand::Uint64 arg1 ;
  PractRand::RNGs::Polymorphic::salsa *result = 0 ;
  PractRand::RNGs::Polymorphic::salsa *_swig_go_result;
  
  arg1 = (PractRand::Uint64)_swig_go_0; 
  
  result = (PractRand::RNGs::Polymorphic::salsa *)new PractRand::RNGs::Polymorphic::salsa(arg1);
  *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_result = (PractRand::RNGs::Polymorphic::salsa *)result; 
  return _swig_go_result;
}


PractRand::RNGs::Polymorphic::salsa *_wrap_new_SalsaPolymorphicFromRNG_rng_fe65931e97657fa4(PractRand::RNGs::vRNG *_swig_go_0) {
  PractRand::RNGs::Polymorphic::vRNG *arg1 = (PractRand::RNGs::Polymorphic::vRNG *) 0 ;
  PractRand::RNGs::Polymorphic::salsa *result = 0 ;
  PractRand::RNGs::Polymorphic::salsa *_swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::vRNG **)&_swig_go_0; 
  
  result = (PractRand::RNGs::Polymorphic::salsa *)new PractRand::RNGs::Polymorphic::salsa(arg1);
  *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_result = (PractRand::RNGs::Polymorphic::salsa *)result; 
  return _swig_go_result;
}


PractRand::RNGs::Polymorphic::salsa *_wrap_new_SalsaPolymorphicFromAuto_rng_fe65931e97657fa4(PractRand::SEED_AUTO_TYPE *_swig_go_0) {
  PractRand::SEED_AUTO_TYPE arg1 ;
  PractRand::SEED_AUTO_TYPE *argp1 ;
  PractRand::RNGs::Polymorphic::salsa *result = 0 ;
  PractRand::RNGs::Polymorphic::salsa *_swig_go_result;
  
  
  argp1 = (PractRand::SEED_AUTO_TYPE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null PractRand::SEED_AUTO_TYPE");
  }
  arg1 = (PractRand::SEED_AUTO_TYPE)*argp1;
  
  
  result = (PractRand::RNGs::Polymorphic::salsa *)new PractRand::RNGs::Polymorphic::salsa(arg1);
  *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_result = (PractRand::RNGs::Polymorphic::salsa *)result; 
  return _swig_go_result;
}


PractRand::RNGs::Polymorphic::salsa *_wrap_new_SalsaPolymorphicFromNone_rng_fe65931e97657fa4(PractRand::SEED_NONE_TYPE *_swig_go_0) {
  PractRand::SEED_NONE_TYPE arg1 ;
  PractRand::SEED_NONE_TYPE *argp1 ;
  PractRand::RNGs::Polymorphic::salsa *result = 0 ;
  PractRand::RNGs::Polymorphic::salsa *_swig_go_result;
  
  
  argp1 = (PractRand::SEED_NONE_TYPE *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null PractRand::SEED_NONE_TYPE");
  }
  arg1 = (PractRand::SEED_NONE_TYPE)*argp1;
  
  
  result = (PractRand::RNGs::Polymorphic::salsa *)new PractRand::RNGs::Polymorphic::salsa(arg1);
  *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_result = (PractRand::RNGs::Polymorphic::salsa *)result; 
  return _swig_go_result;
}


char _wrap_SalsaPolymorphic_raw8_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint8 result;
  char _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  result = (PractRand::Uint8)(arg1)->raw8();
  _swig_go_result = result; 
  return _swig_go_result;
}


short _wrap_SalsaPolymorphic_raw16_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint16 result;
  short _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  result = (PractRand::Uint16)(arg1)->raw16();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SalsaPolymorphic_raw32_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  result = (PractRand::Uint32)(arg1)->raw32();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_SalsaPolymorphic_raw64_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  result = (PractRand::Uint64)(arg1)->raw64();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_SalsaPolymorphic_GetFlags_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  result = (PractRand::Uint64)((PractRand::RNGs::Polymorphic::salsa const *)arg1)->get_flags();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_SalsaPolymorphic_GetName_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  result = ((PractRand::RNGs::Polymorphic::salsa const *)arg1)->get_name();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_SalsaPolymorphic_WalkState_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, PractRand::StateWalkingObject *_swig_go_1) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::StateWalkingObject *arg2 = (PractRand::StateWalkingObject *) 0 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = *(PractRand::StateWalkingObject **)&_swig_go_1; 
  
  (arg1)->walk_state(arg2);
  
}


PractRand::RNGs::Polymorphic::salsa *_wrap_new_SalsaPolymorphicFromSeedAndIV_rng_fe65931e97657fa4(intgo *_swig_go_0, bool _swig_go_1) {
  PractRand::Uint32 *arg1 ;
  bool arg2 ;
  PractRand::RNGs::Polymorphic::salsa *result = 0 ;
  PractRand::RNGs::Polymorphic::salsa *_swig_go_result;
  
  arg1 = *(PractRand::Uint32 **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (PractRand::RNGs::Polymorphic::salsa *)new PractRand::RNGs::Polymorphic::salsa(arg1,arg2);
  *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_result = (PractRand::RNGs::Polymorphic::salsa *)result; 
  return _swig_go_result;
}


void _wrap_SalsaPolymorphic_SeedAndIV_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, intgo *_swig_go_1, bool _swig_go_2) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint32 *arg2 ;
  bool arg3 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = *(PractRand::Uint32 **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->seed(arg2,arg3);
  
}


void _wrap_SalsaPolymorphic_SeedShort_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, intgo *_swig_go_1, bool _swig_go_2) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint32 *arg2 ;
  bool arg3 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = *(PractRand::Uint32 **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->seed_short(arg2,arg3);
  
}


void _wrap_SalsaPolymorphic_SeekForward128_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  (arg1)->seek_forward128(arg2,arg3);
  
}


void _wrap_SalsaPolymorphic_SeekBackward128_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  (arg1)->seek_backward128(arg2,arg3);
  
}


void _wrap_SalsaPolymorphic_SetRounds_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  int arg2 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->set_rounds(arg2);
  
}


intgo _wrap_SalsaPolymorphic_GetRounds_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  result = (int)((PractRand::RNGs::Polymorphic::salsa const *)arg1)->get_rounds();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_SalsaPolymorphic_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_SalsaPolymorphic_GetNativeOutputSize_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  result = (int)((PractRand::RNGs::vRNG32 const *)swig_b0)->get_native_output_size();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SalsaPolymorphic_SeedFast_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  (swig_b1)->seed_fast(arg2);
  
}


void _wrap_SalsaPolymorphic_autoseed_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  (swig_b1)->autoseed();
  
}


long long _wrap_SalsaPolymorphic_serialize_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (long)_swig_go_2; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  result = (long)(swig_b1)->serialize(arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_SalsaPolymorphic_deserialize_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (long)_swig_go_2; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  result = (bool)(swig_b1)->deserialize((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_SalsaPolymorphic_PrintState_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  result = (swig_b1)->print_state();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


intgo _wrap_SalsaPolymorphic_randi_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint32 arg2 ;
  PractRand::Uint32 arg3 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  arg3 = (PractRand::Uint32)_swig_go_2; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  result = (PractRand::Uint32)(swig_b1)->randi(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SalsaPolymorphic_RandiFast_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint32 arg2 ;
  PractRand::Uint32 arg3 ;
  PractRand::Uint32 result;
  intgo _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  arg3 = (PractRand::Uint32)_swig_go_2; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  result = (PractRand::Uint32)(swig_b1)->randi_fast(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_SalsaPolymorphic_randli_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint64 arg2 ;
  PractRand::Uint64 arg3 ;
  PractRand::Uint64 result;
  long long _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  arg3 = (PractRand::Uint64)_swig_go_2; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  result = (PractRand::Uint64)(swig_b1)->randli(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_SalsaPolymorphic_randf_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  float arg2 ;
  float arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  result = (float)(swig_b1)->randf(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_SalsaPolymorphic_randlf_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  result = (double)(swig_b1)->randlf(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_SalsaPolymorphic_gaussian_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  result = (double)(swig_b1)->gaussian();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SalsaPolymorphic_SeekForward_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  (swig_b1)->seek_forward(arg2);
  
}


void _wrap_SalsaPolymorphic_SeekBackward_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  (swig_b1)->seek_backward(arg2);
  
}


void _wrap_SalsaPolymorphic_ResetEntropy_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  (swig_b1)->reset_entropy();
  
}


void _wrap_SalsaPolymorphic_AddEntropy8_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, char _swig_go_1) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint8 arg2 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint8)_swig_go_1; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  (swig_b1)->add_entropy8(arg2);
  
}


void _wrap_SalsaPolymorphic_AddEntropy16_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, short _swig_go_1) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint16 arg2 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint16)_swig_go_1; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  (swig_b1)->add_entropy16(arg2);
  
}


void _wrap_SalsaPolymorphic_AddEntropy32_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint32 arg2 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint32)_swig_go_1; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  (swig_b1)->add_entropy32(arg2);
  
}


void _wrap_SalsaPolymorphic_AddEntropy64_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, long long _swig_go_1) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  PractRand::Uint64 arg2 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (PractRand::Uint64)_swig_go_1; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  (swig_b1)->add_entropy64(arg2);
  
}


void _wrap_SalsaPolymorphic_AddEntropyN_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, void *_swig_go_1, long long _swig_go_2) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  (swig_b1)->add_entropy_N((void const *)arg2,arg3);
  
}


bool _wrap_SalsaPolymorphic_AddEntropyAuto_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0, intgo _swig_go_1) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  result = (bool)(swig_b1)->add_entropy_automatically(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SalsaPolymorphic_FlushBuffers_rng_fe65931e97657fa4(PractRand::RNGs::Polymorphic::salsa *_swig_go_0) {
  PractRand::RNGs::Polymorphic::salsa *arg1 = (PractRand::RNGs::Polymorphic::salsa *) 0 ;
  
  arg1 = *(PractRand::RNGs::Polymorphic::salsa **)&_swig_go_0; 
  
  PractRand::RNGs::vRNG32 *swig_b0 = (PractRand::RNGs::vRNG32 *)arg1;
  PractRand::RNGs::vRNG *swig_b1 = (PractRand::RNGs::vRNG *)swig_b0;
  (swig_b1)->flush_buffers();
  
}


#ifdef __cplusplus
}
#endif

